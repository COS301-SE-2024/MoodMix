import java.util.Properties
import java.io.File
import java.io.FileInputStream

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {

    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

}

android {
    namespace = "com.moodmix.app.frontend_temp"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion



    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.moodmix.app.frontend_temp"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }


    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }



    packagingOptions {

    }

    dependencies {

        implementation 'org.tensorflow:tensorflow-lite:2.12.0' // Use the latest version
        implementation 'com.spotify.android:auth:1.2.3'


    }
}

flutter {
    source = "../.."
}

//configurations.all {
//    exclude group: 'com.google.code.findbugs', module: 'jsr305'
//    exclude group: 'com.google.guava', module: 'guava'
//}