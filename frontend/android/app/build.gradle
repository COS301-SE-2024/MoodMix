import java.util.Properties
import java.io.File
import java.io.FileInputStream

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
   // id 'java-library'
  //  id 'org.bytedeco.gradle-javacpp-platform' version "$javacppVersion"
}

ext {
    javacppPlatform = 'linux-x86_64,macosx-x86_64,windows-x86_64,etc' // defaults to Loader.getPlatform()
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {

    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

}


//android.applicationVariants.all { variant ->
//    def variantName = variant.name.capitalize() // either "Debug" or "Release"
//    def javaCompile = project.tasks.getByName("compile${variantName}JavaWithJavac")
//    def configureCMake = project.tasks.findAll {
//        it.name.startsWith("configureCMake$variantName")
//    }
//
//    // Compiles NativeLibraryConfig.java
//    task "javacppCompileJava$variantName"(type: JavaCompile) {
//        include 'com/example/myapplication/NativeLibraryConfig.java'
//        source = javaCompile.source
//        classpath = javaCompile.classpath
//        destinationDir = javaCompile.destinationDir
//    }
//
//    // Parses NativeLibrary.h and outputs NativeLibrary.java
//    task "javacppBuildParser$variantName"(type: org.bytedeco.gradle.javacpp.BuildTask) {
//        dependsOn "javacppCompileJava$variantName"
//        classPath = [javaCompile.destinationDir]
//        includePath =  ["$projectDir/src/main/cpp/"]
//        classOrPackageNames = ['com.example.myapplication.NativeLibraryConfig']
//        outputDirectory = file("$projectDir/src/main/java/")
//    }
//
//    // Compiles NativeLibrary.java and everything else
//    javaCompile.dependsOn "javacppBuildParser$variantName"
//
//    // Generates jnijavacpp.cpp and jniNativeLibrary.cpp
//    task "javacppBuildCompiler$variantName"(type: org.bytedeco.gradle.javacpp.BuildTask) {
//        dependsOn javaCompile
//        classPath = [javaCompile.destinationDir]
//        classOrPackageNames = ['com.example.myapplication.NativeLibrary']
//        compile = false
//        deleteJniFiles = false
//        outputDirectory = file("$projectDir/src/main/cpp/")
//    }
//
//    // Picks up the C++ files listed in CMakeLists.txt
//    configureCMake.forEach {
//        it.dependsOn "javacppBuildCompiler$variantName"
//    }
//}

android {
    namespace = "com.moodmix.app.frontend_temp"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            // Hook into the process before the final APK is generated
            output.processResources.doLast {
                def libDir = file("${buildDir}/intermediates/merged_native_libs/${variant.name}/out/lib")
                libDir.eachFileRecurse { file ->
                    if (file.name.contains("lib")) {
                        // Rename the offending 'lib' files or directories
                        file.renameTo(file.path.replace("lib", "mylib"))
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.moodmix.app.frontend_temp"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }




    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }


    packagingOptions {

        exclude 'META-INF/native-image/ios-x86_64/jnijavacpp/reflect-config.json'
        exclude 'META-INF/native-image/ios-x86_64/jnijavacpp/jni-config.json'
        exclude 'META-INF/native-image/ios-x86_64/jnijavacpp/proxy-config.json'
        exclude 'META-INF/native-image/ios-x86_64/jnijavacpp/resource-config.json'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        pickFirst 'META-INF/ASL2.0'
        pickFirst 'META-INF/native-image/**/jnijavacpp/reflect-config.json'
        pickFirst 'META-INF/native-image/**/jnijavacpp/jni-config.json'
        pickFirst 'META-INF/native-image/**/jnijavacpp/resource-config.json'
        pickFirst 'nd4j-native.properties'


        //Gerrit se attempt om die app te laat werk :D
        exclude "libs/arm64-v8a/include/cblas.h"
        exclude "lib/arm64-v8a/include/cvkernels.h"
        exclude "lib/arm64-v8a/include/f77blas.h"
        exclude "lib/arm64-v8a/include/gif_lib.h"
        exclude "lib/arm64-v8a/include/jconfig.h"
        exclude "lib/arm64-v8a/include/jerror.h"
        exclude "lib/arm64-v8a/include/jmorecfg.h"
        exclude "lib/arm64-v8a/include/jpeglib.h"
        exclude "lib/arm64-v8a/include/lapacke.h"
        exclude "lib/arm64-v8a/include/lapacke_config.h"
        exclude "lib/arm64-v8a/include/lapacke_mangling.h"
        exclude "lib/arm64-v8a/include/lapacke_utils.h"
        exclude "lib/arm64-v8a/include/leptonica/allheaders.h"
        exclude "lib/arm64-v8a/include/leptonica/alltypes.h"
        exclude "lib/arm64-v8a/include/leptonica/*"
        exclude "lib/arm64-v8a/include/libpng15/png.h"
        exclude "lib/arm64-v8a/include/libpng15/pngconf.h"
        exclude "lib/arm64-v8a/include/libpng15/pnglibconf.h"
        exclude "lib/arm64-v8a/include/openblas_config.h"
        exclude "lib/arm64-v8a/include/opencv2/*"
        exclude "lib/arm64-v8a/include/opencv2/aruco.hpp"
        exclude "lib/arm64-v8a/include/opencv2/aruco/charuco.hpp"
        exclude "lib/arm64-v8a/include/opencv2/aruco/dictionary.hpp"
        exclude "lib/arm64-v8a/include/opencv2/bgsegm.hpp"
        exclude "lib/arm64-v8a/include/opencv2/bioinspired.hpp"
        exclude "lib/arm64-v8a/include/opencv2/bioinspired/bioinspired.hpp"
        exclude "lib/arm64-v8a/include/opencv2/bioinspired/retina.hpp"
        exclude "lib/arm64-v8a/include/opencv2/bioinspired/retinafasttonemapping.hpp"
        exclude "lib/arm64-v8a/include/opencv2/bioinspired/transientareassegmentationmodule.hpp"
        exclude "lib/arm64-v8a/include/opencv2/calib3d.hpp"
        exclude "lib/arm64-v8a/include/opencv2/calib3d/calib3d.hpp"
        exclude "lib/arm64-v8a/include/opencv2/calib3d/calib3d_c.h"
        exclude "lib/arm64-v8a/include/opencv2/core.hpp"
        exclude "lib/arm64-v8a/include/opencv2/core/*"
        exclude "lib/arm64-v8a/include/opencv2/core/cuda/*"
        exclude "lib/arm64-v8a/include/opencv2/core/cuda/detail/*"
        exclude "lib/arm64-v8a/include/opencv2/core/detail/*"
        exclude "lib/arm64-v8a/include/opencv2/core/hal/*"
        exclude "lib/arm64-v8a/include/opencv2/core/opencl/*"
        exclude "lib/arm64-v8a/include/opencv2/core/opencl/runtime/autogenerated/*"
        exclude "lib/arm64-v8a/include/opencv2/core/opencl/runtime/*"
        exclude "lib/arm64-v8a/include/opencv2/core/utils/*"
        exclude "lib/arm64-v8a/include/*"
        exclude "lib/arm64-v8a/include/webp/*"
        exclude "lib/arm64-v8a/lib/cmake/openblas/*"
        exclude "lib/arm64-v8a/lib/*"
        exclude "lib/arm64-v8a/lib/pkgconfig/*"
        exclude "lib/armeabi-v7a/include/*"
        exclude "lib/armeabi-v7a/*"
        exclude "lib/armeabi-v7a/include/leptonica/*"
        exclude "lib/armeabi-v7a/include/libpng15/*"
        exclude "lib/armeabi-v7a/include/libpng15/png.h"
        exclude "lib/armeabi-v7a/include/opencv2/*"
        exclude "lib/armeabi-v7a/include/opencv2/aruco/*"
        exclude "lib/armeabi-v7a/include/webp/*"



        //     resources.excludes += [
        //      pickFirst    'META-INF/native-image/**/jnijavacpp/reflect-config.json'
        //              pickFirst   'META-INF/native-image/**/jnijavacpp/jni-config.json'
        //       ]
//        pickFirst 'META-INF/native-image/ios-x86_64/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/linux-x86_64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/windows-x86/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/android-x86_64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/android-x86/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/ios-arm64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/windows-x86_64/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/windows-x86_64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/android-arm/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/linux-ppc64le/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/linux-x86_64/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/linux-arm64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/android-arm64/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/android-arm/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/ios-x86_64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/android-arm64/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/windows-x86/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/macosx-x86_64/jnijavacpp/reflect-config.json'
//        pickFirst 'META-INF/native-image/linux-x86/jnijavacpp/jni-config.json'
//        pickFirst 'META-INF/native-image/ios-arm64/jnijavacpp/reflect-config.json'
    }

//    configurations {
//        javacpp
//    }
//
//    task javacppExtract(type: Copy) {
//        dependsOn configurations.javacpp
//
//        from { configurations.javacpp.collect { zipTree(it) } }
//        include "lib/**"
//        into "$buildDir/javacpp/"
//        android.sourceSets.main.jniLibs.srcDirs += ["$buildDir/javacpp/lib/"]
//
//        tasks.getByName('preBuild').dependsOn javacppExtract
//    }

    dependencies {
        //api "org.bytedeco:javacv-platform:$javacvVersion"
        implementation (group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '1.0.0-beta6') {
            exclude group: 'org.bytedeco', module: 'opencv-platform'
            exclude group: 'org.bytedeco', module: 'leptonica-platform'
            exclude group: 'org.bytedeco', module: 'hdf5-platform'
            exclude group: 'com.google.guava', module: 'guava'
            exclude group: 'org.nd4j', module: 'protobuf'
            exclude group: 'com.google.code.findbugs', module: 'jsr305'
        }
//        implementation (group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-beta6') {
//            exclude group: 'com.google.code.findbugs', module: 'jsr305'
//            exclude group: 'com.google.guava', module: 'guava'
//        }
//        implementation group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-beta6', classifier: "android-arm"
//        implementation group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-beta6', classifier: "android-arm64"
//        implementation group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-beta6', classifier: "android-x86"
//        implementation group: 'org.nd4j', name: 'nd4j-native', version: '1.0.0-beta6', classifier: "android-x86_64"
//        implementation group: 'org.bytedeco', name: 'openblas', version: '0.3.7-1.5.2'
//        implementation group: 'org.bytedeco', name: 'openblas', version: '0.3.7-1.5.2', classifier: "android-arm"
//        implementation group: 'org.bytedeco', name: 'openblas', version: '0.3.7-1.5.2', classifier: "android-arm64"
//        implementation group: 'org.bytedeco', name: 'openblas', version: '0.3.7-1.5.2', classifier: "android-x86"
//        implementation group: 'org.bytedeco', name: 'openblas', version: '0.3.7-1.5.2', classifier: "android-x86_64"
//        implementation group: 'org.bytedeco', name: 'opencv', version: '4.1.2-1.5.2'
//        implementation group: 'org.bytedeco', name: 'opencv', version: '4.1.2-1.5.2', classifier: "android-arm"
//        implementation group: 'org.bytedeco', name: 'opencv', version: '4.1.2-1.5.2', classifier: "android-arm64"
//        implementation group: 'org.bytedeco', name: 'opencv', version: '4.1.2-1.5.2', classifier: "android-x86"
//        implementation group: 'org.bytedeco', name: 'opencv', version: '4.1.2-1.5.2', classifier: "android-x86_64"
//        implementation group: 'org.bytedeco', name: 'leptonica', version: '1.78.0-1.5.2'
//        implementation group: 'org.bytedeco', name: 'leptonica', version: '1.78.0-1.5.2', classifier: "android-arm"
//        implementation group: 'org.bytedeco', name: 'leptonica', version: '1.78.0-1.5.2', classifier: "android-arm64"
//        implementation group: 'org.bytedeco', name: 'leptonica', version: '1.78.0-1.5.2', classifier: "android-x86"
//        implementation group: 'org.bytedeco', name: 'leptonica', version: '1.78.0-1.5.2', classifier: "android-x86_64"
//        implementation(group: 'org.nd4j', name: 'guava', version: '1.0.0-beta6') {
//            exclude group: 'com.google.code.findbugs', module: 'jsr305'
//        }
//
//        implementation(group: 'org.nd4j', name: 'protobuf', version: '1.0.0-beta6') {
//            exclude group: 'com.google.guava', module: 'guava'
//        }

        implementation ('org.nd4j:nd4j-native:1.0.0-M2.1:android-arm64') {
            exclude group: 'org.nd4j', module: 'guava'
            exclude group: 'org.nd4j', module: 'protobuf'
            exclude group: 'org.bytedeco', module: 'opencv-platform'
            exclude group: 'org.bytedeco', module: 'leptonica-platform'
            exclude group: 'org.bytedeco', module: 'hdf5-platform'
        }

        implementation ('org.nd4j:nd4j-native:1.0.0-M2.1:android-arm') {
            exclude group: 'org.nd4j', module: 'guava'
            exclude group: 'org.nd4j', module: 'protobuf'
            exclude group: 'org.bytedeco'
            exclude group: 'org.bytedeco', module: 'opencv-platform'
            exclude group: 'org.bytedeco', module: 'leptonica-platform'
            exclude group: 'org.bytedeco', module: 'hdf5-platform'
        }

        implementation ('org.nd4j:nd4j-native:1.0.0-M2.1:android-x86') {
            exclude group: 'org.nd4j', module: 'guava'
            exclude group: 'org.nd4j', module: 'protobuf'
            exclude group: 'org.bytedeco'

        }

        implementation ('org.nd4j:nd4j-native:1.0.0-M2.1:android-x86_64') {
            exclude group: 'org.nd4j', module: 'guava'
            exclude group: 'org.nd4j', module: 'protobuf'
            exclude group: 'org.bytedeco'


        }

        implementation ('org.nd4j:nd4j-native:1.0.0-M2.1') {
            exclude group: 'org.nd4j', module: 'guava'
            exclude group: 'org.nd4j', module: 'protobuf'
            exclude group: 'org.bytedeco'
        }

        implementation 'org.bytedeco:openblas:0.3.23-1.5.9'
        implementation 'org.bytedeco:opencv:4.1.2-1.5.2'




        testImplementation 'junit:junit:4.12'
        implementation 'com.spotify.android:auth:1.2.3'
        implementation 'io.github.cdimascio:dotenv-java:3.0.0'
//
//        implementation 'org.nd4j:nd4j-native:1.0.0-M1:android-x86'
//
//        implementation group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '1.0.0-M1'
//
//
//        configurations.all {
//            exclude group: 'com.google.code.findbugs', module: 'jsr305'
//            exclude group: 'com.google.guava', module: 'guava'
//        }



    }
}

flutter {
    source = "../.."
}

configurations.all {
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
    exclude group: 'com.google.guava', module: 'guava'
}